# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import simple_server_pb2 as simple__server__pb2


class HelloServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/helloworld.HelloService/SayHello',
        request_serializer=simple__server__pb2.HelloRequest.SerializeToString,
        response_deserializer=simple__server__pb2.HelloResponse.FromString,
        )
    self.SayManyHellos = channel.unary_stream(
        '/helloworld.HelloService/SayManyHellos',
        request_serializer=simple__server__pb2.HelloRequest.SerializeToString,
        response_deserializer=simple__server__pb2.HelloResponse.FromString,
        )


class HelloServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SayHello(self, request, context):
    """rpc FunctionName (ArgumentType, ArgumentType) returns (ArgumentType);
    single request single response 

    Client calls stub/client's method  -> server notified
    (server can send some meta or wait for request)
    server recieves message  -> makes work -> sends response
    client recieves response
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SayManyHellos(self, request, context):
    """rpc __ () returns (stream ___) ;
    `Server Streaming` : single request - multiple response 
    client reads until there is no messages in the stream 
    ---
    same as previous but with some metadata when server ends the stream
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HelloServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': grpc.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=simple__server__pb2.HelloRequest.FromString,
          response_serializer=simple__server__pb2.HelloResponse.SerializeToString,
      ),
      'SayManyHellos': grpc.unary_stream_rpc_method_handler(
          servicer.SayManyHellos,
          request_deserializer=simple__server__pb2.HelloRequest.FromString,
          response_serializer=simple__server__pb2.HelloResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'helloworld.HelloService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
